name: CI/CD Pipeline for Laravel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 1. Job para ejecutar pruebas
  tests:
    runs-on: ubuntu-latest

    steps:
      # Configurar PHP
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      # Clonar el repositorio
      - uses: actions/checkout@v4

      # Copiar el archivo .env
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      # Instalar dependencias PHP
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # Generar clave de la aplicación
      - name: Generate Key
        run: php artisan key:generate

      # Establecer permisos de directorios
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      # Crear base de datos SQLite
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      # Ejecutar pruebas con PHPUnit/Pest
      - name: Run Tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: |
          php artisan test

      # Verificar que las pruebas pasen (detener pipeline si fallan)
      - name: Ensure Tests Passed
        if: failure()
        run: exit 1

  # 2. Job para desplegar la aplicación
  deploy:
    needs: tests # Este paso depende del job "tests"
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio
      - uses: actions/checkout@v3

      # Configurar PHP
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, xml, bcmath, curl, zip
          coverage: none

      # Configurar Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      # Instalar dependencias PHP y Node.js
      - name: Install Composer Dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      - name: Install Node.js Dependencies
        run: npm ci

      # Construir assets frontend
      - name: Build Frontend
        run: npm run build

      # Subir archivos al servidor
      - name: Deploy to Server
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          USER: ${{ secrets.SERVER_USER }}
          KEY: ${{ secrets.SERVER_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          ssh $USER@$HOST "
          sudo mkdir -p /var/www/laravel &&
          sudo chown -R $USER:$USER /var/www/laravel &&
          sudo chmod -R 755 /var/www/laravel &&
            git pull origin main &&
            composer install --no-dev --prefer-dist --optimize-autoloader &&
            npm ci &&
            npm run build &&
            php artisan migrate --force &&
            php artisan cache:clear &&
            php artisan config:clear &&
            php artisan route:clear &&
            php artisan view:clear
          "
